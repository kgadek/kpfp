package lab;


/**
* lab/DronePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from root.idl
* wtorek, 24 kwiecieñ 2012 02:57:52 CEST
*/

@SuppressWarnings("unchecked")
public abstract class DronePOA extends org.omg.PortableServer.Servant
 implements lab.DroneOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  @SuppressWarnings("rawtypes")
private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("_get_name", new java.lang.Integer (0));
    _methods.put ("_set_name", new java.lang.Integer (1));
    _methods.put ("_get_id", new java.lang.Integer (2));
    _methods.put ("_set_id", new java.lang.Integer (3));
    _methods.put ("command", new java.lang.Integer (4));
    _methods.put ("add_overmind", new java.lang.Integer (5));
    _methods.put ("rem_overmind", new java.lang.Integer (6));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  // = device
       case 0:  // lab/Drone/_get_name
       {
         String $result = null;
         $result = this.name ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }


  // = device
       case 1:  // lab/Drone/_set_name
       {
         String newName = in.read_string ();
         this.name (newName);
         out = $rh.createReply();
         break;
       }

       case 2:  // lab/Drone/_get_id
       {
         int $result = (int)0;
         $result = this.id ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 3:  // lab/Drone/_set_id
       {
         int newId = in.read_long ();
         this.id (newId);
         out = $rh.createReply();
         break;
       }

       case 4:  // lab/Drone/command
       {
         String cmd = in.read_string ();
         this.command (cmd);
         out = $rh.createReply();
         break;
       }

       case 5:  // lab/Drone/add_overmind
       {
         lab.Overlord lstnr = lab.OverlordHelper.read (in);
         this.add_overmind (lstnr);
         out = $rh.createReply();
         break;
       }

       case 6:  // lab/Drone/rem_overmind
       {
         lab.Overlord lstnr = lab.OverlordHelper.read (in);
         this.rem_overmind (lstnr);
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:lab/Drone:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Drone _this() 
  {
    return DroneHelper.narrow(
    super._this_object());
  }

  public Drone _this(org.omg.CORBA.ORB orb) 
  {
    return DroneHelper.narrow(
    super._this_object(orb));
  }


} // class DronePOA
