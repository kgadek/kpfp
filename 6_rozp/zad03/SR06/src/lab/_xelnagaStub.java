package lab;


/**
* lab/_xelnagaStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from root.idl
* wtorek, 24 kwiecieï¿½ 2012 02:57:52 CEST
*/

public class _xelnagaStub extends org.omg.CORBA.portable.ObjectImpl implements lab.Xelnaga
{


  // stupid CORBA, Y U can't put this inline?
  public int xid ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_xid", true);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return xid (        );
            } finally {
                _releaseReply ($in);
            }
  } // xid


  // stupid CORBA, Y U can't put this inline?
  public void xid (int newXid)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_set_xid", true);
                $out.write_long (newXid);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                xid (newXid        );
            } finally {
                _releaseReply ($in);
            }
  } // xid

  public lab.Drone searchDroneByName (String name)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("searchDroneByName", true);
                $out.write_string (name);
                $in = _invoke ($out);
                lab.Drone $result = lab.DroneHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return searchDroneByName (name        );
            } finally {
                _releaseReply ($in);
            }
  } // searchDroneByName

  public lab.Drone[] searchSpaceAndDestroyProtossRace ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("searchSpaceAndDestroyProtossRace", true);
                $in = _invoke ($out);
                lab.Drone $result[] = lab.xelnagaPackage.armyOfDronesHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return searchSpaceAndDestroyProtossRace (        );
            } finally {
                _releaseReply ($in);
            }
  } // searchSpaceAndDestroyProtossRace

  public void controlDrone (int id, lab.Overlord lstnr)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("controlDrone", true);
                $out.write_long (id);
                lab.OverlordHelper.write ($out, lstnr);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                controlDrone (id, lstnr        );
            } finally {
                _releaseReply ($in);
            }
  } // controlDrone

  public void abandonDrone (int id, lab.Overlord lstnr)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("abandonDrone", true);
                $out.write_long (id);
                lab.OverlordHelper.write ($out, lstnr);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                abandonDrone (id, lstnr        );
            } finally {
                _releaseReply ($in);
            }
  } // abandonDrone

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:lab/xelnaga:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _xelnagaStub
