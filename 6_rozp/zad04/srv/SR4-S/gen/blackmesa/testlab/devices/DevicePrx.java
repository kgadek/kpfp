// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `DevicePrx.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package blackmesa.testlab.devices;

public interface DevicePrx extends Ice.ObjectPrx
{
    public void takeAndUse(String password)
        throws AlreadyUsedException,
               WrongPasswordException;

    public void takeAndUse(String password, java.util.Map<String, String> __ctx)
        throws AlreadyUsedException,
               WrongPasswordException;

    public Ice.AsyncResult begin_takeAndUse(String password);

    public Ice.AsyncResult begin_takeAndUse(String password, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_takeAndUse(String password, Ice.Callback __cb);

    public Ice.AsyncResult begin_takeAndUse(String password, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_takeAndUse(String password, Callback_Device_takeAndUse __cb);

    public Ice.AsyncResult begin_takeAndUse(String password, java.util.Map<String, String> __ctx, Callback_Device_takeAndUse __cb);

    public void end_takeAndUse(Ice.AsyncResult __result)
        throws AlreadyUsedException,
               WrongPasswordException;

    public void leaveAndFree(String password)
        throws WrongPasswordException;

    public void leaveAndFree(String password, java.util.Map<String, String> __ctx)
        throws WrongPasswordException;

    public Ice.AsyncResult begin_leaveAndFree(String password);

    public Ice.AsyncResult begin_leaveAndFree(String password, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_leaveAndFree(String password, Ice.Callback __cb);

    public Ice.AsyncResult begin_leaveAndFree(String password, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_leaveAndFree(String password, Callback_Device_leaveAndFree __cb);

    public Ice.AsyncResult begin_leaveAndFree(String password, java.util.Map<String, String> __ctx, Callback_Device_leaveAndFree __cb);

    public void end_leaveAndFree(Ice.AsyncResult __result)
        throws WrongPasswordException;

    public void startObserving(String password, blackmesa.testlab.scientist.PushFetcherPrx listener)
        throws WrongPasswordException;

    public void startObserving(String password, blackmesa.testlab.scientist.PushFetcherPrx listener, java.util.Map<String, String> __ctx)
        throws WrongPasswordException;

    public Ice.AsyncResult begin_startObserving(String password, blackmesa.testlab.scientist.PushFetcherPrx listener);

    public Ice.AsyncResult begin_startObserving(String password, blackmesa.testlab.scientist.PushFetcherPrx listener, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_startObserving(String password, blackmesa.testlab.scientist.PushFetcherPrx listener, Ice.Callback __cb);

    public Ice.AsyncResult begin_startObserving(String password, blackmesa.testlab.scientist.PushFetcherPrx listener, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_startObserving(String password, blackmesa.testlab.scientist.PushFetcherPrx listener, Callback_Device_startObserving __cb);

    public Ice.AsyncResult begin_startObserving(String password, blackmesa.testlab.scientist.PushFetcherPrx listener, java.util.Map<String, String> __ctx, Callback_Device_startObserving __cb);

    public void end_startObserving(Ice.AsyncResult __result)
        throws WrongPasswordException;

    public void stopObserving(String password)
        throws WrongPasswordException;

    public void stopObserving(String password, java.util.Map<String, String> __ctx)
        throws WrongPasswordException;

    public Ice.AsyncResult begin_stopObserving(String password);

    public Ice.AsyncResult begin_stopObserving(String password, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_stopObserving(String password, Ice.Callback __cb);

    public Ice.AsyncResult begin_stopObserving(String password, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_stopObserving(String password, Callback_Device_stopObserving __cb);

    public Ice.AsyncResult begin_stopObserving(String password, java.util.Map<String, String> __ctx, Callback_Device_stopObserving __cb);

    public void end_stopObserving(Ice.AsyncResult __result)
        throws WrongPasswordException;

    public Lambda[] getMethods();

    public Lambda[] getMethods(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getMethods();

    public Ice.AsyncResult begin_getMethods(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getMethods(Ice.Callback __cb);

    public Ice.AsyncResult begin_getMethods(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getMethods(Callback_Device_getMethods __cb);

    public Ice.AsyncResult begin_getMethods(java.util.Map<String, String> __ctx, Callback_Device_getMethods __cb);

    public Lambda[] end_getMethods(Ice.AsyncResult __result);

    public String getID();

    public String getID(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getID();

    public Ice.AsyncResult begin_getID(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getID(Ice.Callback __cb);

    public Ice.AsyncResult begin_getID(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getID(Callback_Device_getID __cb);

    public Ice.AsyncResult begin_getID(java.util.Map<String, String> __ctx, Callback_Device_getID __cb);

    public String end_getID(Ice.AsyncResult __result);
}
